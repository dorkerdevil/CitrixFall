-- Usage: nmap --script cve-2023-3519-checker [--script-args checktype=vuln|service] <target>
-- Nmap NSE script for CVE-2023-3519 Citrix unauthenticated remote code execution  

description = [[
Checks target for CVE-2023-3519 vulnerability and Citrix service detections.
]]

author = "Ashish Kunwar (@D0rkerDevil)"
license = "https://nmap.org/book/man-legal.html"
categories = {"safe", "vuln"}

references = {
  'https://nvd.nist.gov/vuln/detail/CVE-2023-3519', 
  'https://twitter.com/synfinner/status/1682391181077127170?s=20'
}

local http = require "http"
local shortport = require "shortport"
local strbuf = require "strbuf"
local stdnse = require "stdnse"

portrule = shortport.ssl

local PATCHED_VERSIONS = {
    "Fri, 07 Jul 2023 15:39:40 GMT",
    "Mon, 10 Jul 2023 17:41:17 GMT",
    "Mon, 10 Jul 2023 18:36:14 GMT"
}

function checkversion(last_modified)
    for _, patch in ipairs(PATCHED_VERSIONS) do
        if last_modified == patch then
            return "Patched version detected"
        end
    end
    return "Potentially vulnerable to (CVE-2023-3519)"
end

action = function(host, port)
    local response, aaa_response
    local patched = "Not verifiable"
    local last_modified
    local isCitrixGateway = false
    local isCitrixAAA = false

    local checktype = stdnse.get_script_args("checktype") or "vuln"

    if checktype == "vuln" then
        response = http.get(host, port, "/vpn/logout.html")
        if response.status == 200 then
            last_modified = response.header["last-modified"]
            if last_modified then
                patched = checkversion(last_modified)
            else
                last_modified = "N/A"
            end
            return ("IP: %s | Last Modified Header: %s | Result: %s\n"):format(host.ip, last_modified, patched)
        else
            return ("IP: %s | Unable to retrieve response\n"):format(host.ip)
        end
    elseif checktype == "service" then
        response = http.get(host, port, "/vpn/logout.html")
        aaa_response = http.get(host, port, "/logon/LogonPoint/tmindex.html")

        if response.status == 200 and (string.find(response.body, "<title>Citrix Gateway</title>") or string.find(response.body, "/vpn/js/logout_view.js?v=")) then
            isCitrixGateway = true
        end
        if aaa_response.status == 200 and string.find(aaa_response.body, "_ctxstxt_NetscalerAAA") then
            isCitrixAAA = true
        end

        local services = ""
        if isCitrixGateway then
            services = services .. " | Citrix Gateway identified"
        end
        if isCitrixAAA then
            services = services .. " | Citrix AAA identified"
        end
        return ("IP: %s%s\n"):format(host.ip, services)
    else
        return ("Invalid checktype: %s. Use 'vuln' or 'service'.\n"):format(checktype)
    end
end
